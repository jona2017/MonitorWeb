@{ ViewBag.Title = "Home Page"; }


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Selecciones rango de fechas a visualizar en las graficas</h4>
                <div class="card-body">
                    <div class="row button-group">
                        <div class="row col-md-3">

                            <label>Fecha desde</label>
                            <div class="input-group">
                                <input id="DateFrom" type="date" value="2021-11-22" />
                            </div>


                        </div>

                        <div class="row col-md-3">

                            <label>Fecha Hasta</label>
                            <div class="input-group">
                                <input id="DateTo" type="date" value="2021-11-22" />
                            </div>


                        </div>

                        <button id="btnProcesarConsulta" class="btn-sm btn-info btn-block" data-toggle="tooltip" data-placement="right" type="button">
                            <strong>Buscar</strong>
                            <span class="fa fa-plus-square"></span>
                        </button>
                    </div>
                </div>

                <div id="example5.2" style="height:auto;"></div>
            </div>
        </div>
        <div class="col-md-12">
            <div id="chart_div"></div>
        </div>
    </div>


</div>

<script type="text/javascript">
    google.charts.load("current", { packages: ["timeline"] });
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {

        var container = document.getElementById('example5.2');
        var chart = new google.visualization.Timeline(container);
        var dataTable = new google.visualization.DataTable();

        dataTable.addColumn({ type: 'string', id: 'Room' });
        dataTable.addColumn({ type: 'string', id: 'Name' });
        dataTable.addColumn({ type: 'date', id: 'Start' });
        dataTable.addColumn({ type: 'date', id: 'End' });
        dataTable.addRows([
            ['Magnolia Room', 'CSS Fundamentals', new Date(0, 0, 0, 12, 0, 0), new Date(0, 0, 0, 14, 0, 0)],
            ['Magnolia Room', 'Intro JavaScript', new Date(0, 0, 0, 14, 30, 0), new Date(0, 0, 0, 16, 0, 0)],
            ['Magnolia Room', 'Advanced JavaScript', new Date(0, 0, 0, 16, 30, 0), new Date(0, 0, 0, 19, 0, 0)],
            ['Gladiolus Room', 'Intermediate Perl', new Date(0, 0, 0, 12, 30, 0), new Date(0, 0, 0, 14, 0, 0)],
            ['Gladiolus Room', 'Advanced Perl', new Date(0, 0, 0, 14, 30, 0), new Date(0, 0, 0, 16, 0, 0)],
            ['Gladiolus Room', 'Applied Perl', new Date(0, 0, 0, 16, 30, 0), new Date(0, 0, 0, 18, 0, 0)],
            ['Petunia Room', 'Google Charts', new Date(0, 0, 0, 12, 30, 0), new Date(0, 0, 0, 14, 0, 0)],
            ['Petunia Room', 'Closure', new Date(0, 0, 0, 14, 30, 0), new Date(0, 0, 0, 16, 0, 0)],
            ['Petunia Room', 'App Engine', new Date(0, 0, 0, 16, 30, 0), new Date(0, 0, 0, 18, 30, 0)]]);

        var options = {
            timeline: { singleColor: '#43EBEB' },
        };

        chart.draw(dataTable, options);
    }
</script>


<script>
    //#43EBEB
    jQuery(document).ready(async function () {
        function ReportGantt(/*parameter*/) {


            var params = new Object();
            params.dateFrom = $("#DateFrom").val();
            params.dateTo = $("#DateTo").val();
            params = JSON.stringify(params);

            //console.log("mis datos recibidis: " + params);

            $.ajax({
                type: "POST",
                url: "@Url.Action("NewChart", "ReportGantt")",
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (data) {
                    drawChart(data)
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(XMLHttpRequest, textStatus, errorThrown);
                }
            });






            //fetch('/ReportGantt/NewChart', {
            //    method: 'POST', // or 'PUT'
            //    //body: JSON.stringify(parameter), // data can be `string` or {object}!
            //    data: JSON.stringify(parameter), // data can be `string` or {object}!
            //    headers: {
            //        'Content-Type': 'application/json'
            //    }
            //}).then(response => response.json())
            //    .then(data => drawChart(data));

            google.charts.load("current", { packages: ["timeline"] });
            google.charts.setOnLoadCallback(drawChart);
            function drawChart(data) {

                let userData = {
                    User: []
                };
                //console.log(data);

                $.each(data, function (key, value) {

                    

                    var dataG = JSON.parse(value);

                    console.log(dataG);
                    //console.log("User"+ dataG.User, "Date"+ dataG.Date, "TimeImpro"+ dataG.TimeImpro);

                    userData['User'].push({ "User": dataG.User, "Date": dataG.Date, "TimeImpro": dataG.TimeImpro });
                });



                //for (var i = 0; i < data.length; i++) {
                //    var dataG = JSON.parse(data[i]);
                //    userData['User'].push({ "User": dataG.User, "Date": dataG.Date, "TimeImpro": dataG.TimeImpro });
                //}




                //console.log(dataG);
                var container = document.getElementById('chart_div');
                var chart = new google.visualization.Timeline(container);
                var dataTable = new google.visualization.DataTable();
                dataTable.addColumn({ type: 'string', id: 'Position' });
                dataTable.addColumn({ type: 'string', id: 'Name' });
                dataTable.addColumn({ type: 'date', id: 'Start' });
                dataTable.addColumn({ type: 'date', id: 'End' });



                $.each(data, function (key, value) {
                    var dataG = JSON.parse(value);
                    //userData['User'].push({ "User": dataG.User, "Date": dataG.Date, "TimeImpro": dataG.TimeImpro });
                    dataTable.addRows([[dataG.User, 'CSS Fundamentals', new Date(0, 0, 0, 12, 0, 0), new Date(0, 0, 0, 14, 0, 0)] ]);

                });


                //dataTable.addRows([
                //    ['Magnolia Room', 'CSS Fundamentals', new Date(0, 0, 0, 12, 0, 0), new Date(0, 0, 0, 14, 0, 0)],
                //    ['Magnolia Room', 'Intro JavaScript', new Date(0, 0, 0, 14, 30, 0), new Date(0, 0, 0, 16, 0, 0)],
                //    ['Magnolia Room', 'Advanced JavaScript', new Date(0, 0, 0, 16, 30, 0), new Date(0, 0, 0, 19, 0, 0)],
                //    ['Gladiolus Room', 'Intermediate Perl', new Date(0, 0, 0, 12, 30, 0), new Date(0, 0, 0, 14, 0, 0)],
                //    ['Gladiolus Room', 'Advanced Perl', new Date(0, 0, 0, 14, 30, 0), new Date(0, 0, 0, 16, 0, 0)],
                //    ['Gladiolus Room', 'Applied Perl', new Date(0, 0, 0, 16, 30, 0), new Date(0, 0, 0, 18, 0, 0)],
                //    ['Petunia Room', 'Google Charts', new Date(0, 0, 0, 12, 30, 0), new Date(0, 0, 0, 14, 0, 0)],
                //    ['Petunia Room', 'Closure', new Date(0, 0, 0, 14, 30, 0), new Date(0, 0, 0, 16, 0, 0)],
                //    ['Petunia Room', 'App Engine', new Date(0, 0, 0, 16, 30, 0), new Date(0, 0, 0, 18, 30, 0)]]);


                //for (let i = 0; i < userData.User.length; i++) {
                //    //console.log(userData.User[i]);
                //    let tiempo = userData.User[i].Date.sort();
                //    let horainicio = tiempo[0].split(":");
                //    let tiempoF = tiempo[userData.User[i].Date.length - 1];
                //    let horafin = tiempoF.split(":");
                //    let tiempoImpro = userData.User[i].TimeImpro.sort();
                //    let horainicioImpro;
                //    let horafinImpro;
                //    if (tiempoImpro.length != 0) {
                //        horainicioImpro = tiempoImpro[0].split(":");
                //        let tiempoFImpro = tiempoImpro[userData.User[i].TimeImpro.length - 1];
                //        horafinImpro = tiempoFImpro.split(":");

                //    }
                //    //console.log(tiempo);
                //    if (tiempoImpro.length != 0) {
                //        dataTable.addRows([
                //            [userData.User[i].User, userData.User[i].Application, new Date(0, 0, 0, horafinImpro[0] <= horafin[0] ? horafinImpro[0] : horafin[0], horafinImpro[0] <= horafin[0] ? horafinImpro[1] : horafin[1], horafinImpro[0] <= horafin[0] ? horafinImpro[2] : horafin[2]), new Date(0, 0, 0, horafin[0] >= horafinImpro[0] ? horafin[0] : horafinImpro[0], horafin[0] >= horafinImpro[0] ? horafin[1] : horafinImpro[1], horafin[0] >= horafinImpro[0] ? horafin[2] : horafinImpro[2])],
                //            [userData.User[i].User, userData.User[i].AppImpro, new Date(0, 0, 0, horainicioImpro[0] <= horainicio[0] ? horainicio[0] : horainicioImpro[0], horainicio[0] <= horainicioImpro[0] ? horainicio[1] : horainicioImpro[1], horainicio[0] <= horainicioImpro[0] ? horainicio[2] : horainicioImpro[2]), new Date(0, 0, 0, horafinImpro[0] <= horafin[0] ? horafinImpro[0] : horafin[0], horafinImpro[0] <= horafin[0] ? horafinImpro[1] : horafin[1], horafinImpro[0] <= horafin[0] ? horafinImpro[2] : horafin[2])]
                //        ]);
                //    } else {
                //        dataTable.addRows([
                //            [userData.User[i].User, 'Productivo', new Date(0, 0, 0, horainicio[0] < horafin[0] ? horainicio[0] : horafin[0], horainicio[1], horainicio[2]), new Date(0, 0, 0, horafin[0] > horainicio[0] ? horafin[0] : horainicio[0], horafin[1], horafin[2])]

                //        ]);
                //    }
                //}







                var options = {
                    colors: ['#7E72FA', '#E06863'],
                };
                chart.draw(dataTable, options);

            }

        }

        //$('#DateFrom').change(async function () {
        //    //var parameter = {
        //    //    dateFrom: $("#DateFrom").val(),
        //    //    dateTo: $("#DateTo").val(),
        //    //};
        //    await ReportGantt();
        //});
        //$('#DateTo').change(async function () {
        //    //var parameter = {
        //    //    dateFrom: $("#DateFrom").val(),
        //    //    dateTo: $("#DateTo").val(),
        //    //};
        //    await ReportGantt();
        //});

        $("#btnProcesarConsulta").click(function () {
           ReportGantt()
        });
    });

</script>



